#include <stdint.h>
#include <stddef.h>


typedef enum {
    FUOTA_OK = 0,
    FUOTA_INVALID_PACKET_LENGTH = 1,
    FUOTA_UNKNOWN_COMMAND = 2,
    FUOTA_FRAG_SESSION_NOT_ACTIVE = 3,
    FUOTA_PROCESS_FRAME_FAILED = 4,
    FUOTA_BD_READ_ERROR = 5,
    FUOTA_BD_WRITE_ERROR = 6,
    FUOTA_SIGNATURE_MANUFACTURER_UUID_MISMATCH = 7,
    FUOTA_SIGNATURE_DEVICECLASS_UUID_MISMATCH = 8,
    FUOTA_SIGNATURE_ECDSA_FAILED = 9,
    FUOTA_OUT_OF_MEMORY = 10,
    FUOTA_CREATE_BOOTLOADER_HEADER_FAILED = 11,
    FUOTA_INVALID_SLOT = 12,
    FUOTA_DIFF_SIZE_MISMATCH = 13,
    FUOTA_DIFF_INCORRECT_SLOT2_HASH = 14,
    FUOTA_DIFF_DELTA_UPDATE_FAILED = 15,
    FUOTA_INVALID_CLOCK_SYNC_TOKEN = 16,
    FUOTA_INTERNALFLASH_INIT_ERROR = 17,
    FUOTA_INTERNALFLASH_READ_ERROR = 18,
    FUOTA_INTERNALFLASH_DEINIT_ERROR = 19,
    FUOTA_INTERNALFLASH_SECTOR_SIZE_SMALLER = 20,
    FUOTA_INTERNALFLASH_HEADER_PARSE_FAILED = 21,
    FUOTA_NOT_CLASS_C_SESSION_ANS = 22
    } FUOTA_RC;

typedef enum {
    FRAG_OK=0,
    FRAG_SIZE_INCORRECT,
    FRAG_FLASH_WRITE_ERROR,
    FRAG_NO_MEMORY,
    FRAG_INDEX_INCORRECT,
    FRAG_OUT_OF_BOUND_FRAME,
    FRAG_COMPLETE
    } FRAG_RC;

typedef enum{
    FLAG_WrongDescriptor = 4,
    FLAG_IndexNotSupported = 3,
    FLAG_NotEnoughMemory = 2,
    FLAG_EncodingUnsupported = 1,
    FLAG_None = 0
} FRAG_FLAGS;

FUOTA_RC handleMulticastControlCommand(uint8_t *buffer, size_t length);
FUOTA_RC handleFragmentationCommand(uint8_t *buffer, size_t length);
